name: Check if any ceph configuration has been changed
on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - edited
      - reopened

# The following permissions are needed to write a comment to repo
permissions:
    issues: write
    contents: write
    pull-requests: write

jobs:
  pull_request:
    runs-on: ubuntu-latest
    steps:
      - name: checkout ceph.git
        uses: actions/checkout@v4
        with:
          path: ceph
          # sparse-checkout: src/script
          # sparse-checkout-cone-mode: false

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install python packages
        run: |
          pip3 install -r requirements.txt
        working-directory: ceph

      - name: execute config diff tool
        id: diff_tool
        env:
          REF_REPO: "https://github.com/ceph/ceph.git"
          REF_BRANCH: "main"
          REMOTE_REPO: "https://github.com/Naveenaidu/ceph"
          REMOTE_BRANCH: "wip-naveen-telemetry-show-labeled-perf-counters"
        run:  |
          {
              echo 'DIFF_JSON<<EOF'
              python3 main.py diff-branch-remote-repo --ref-repo $REF_REPO --ref-branch $REF_BRANCH --remote-repo $REMOTE_REPO --cmp-branch $REMOTE_BRANCH
              echo EOF
          } >> "$GITHUB_OUTPUT"
          # echo "diff_json=$(python3 main.py diff-branch-remote-repo --ref-repo $REF_REPO --ref-branch $REF_BRANCH --remote-repo $REMOTE_REPO --cmp-branch $REMOTE_BRANCH)" >> "$GITHUB_OUTPUT"
          echo $GITHUB_OUTPUT
        working-directory: ceph

      - name: Post output as a comment
        env:
          DIFF_JSON_OUTPUT: ${{ steps.diff_tool.outputs.DIFF_JSON }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea #v7.0.1
        with:
          script: |
            console.log("----- HELLLLOOOOOOO 0 ---- ")
            const diffJson = JSON.parse(JSON.stringify(process.env.DIFF_JSON_OUTPUT))
            console.log("----- HELLLLOOOOOOO ---- ")
            console.log(diffJson)

            // Check if the structure matches {"added": {}, "deleted": {}, "modified": {}}
            // Do not create comment if there are no configuration changes
            const isEmptyDiff = Object.keys(diffJson.added).length === 0 &&
                Object.keys(diffJson.deleted).length === 0 &&
                Object.keys(diffJson.modified).length === 0;
            
            console.log("----- HELLLLOOOOOOO 1 ---- ")
            if (isEmptyDiff) {
                console.log("----- HELLLLOOOOOOO 2 ---- ")
                console.log("No changes detected. Skipping comment creation.");
            } else {
                const commentBody = `### Config Diff Tool Output
                \`\`\`\
                ${diffOutput}
                \`\`\`\
                
                The above configuration changes are found in the PR, please update the relevant release documentation if necessary.`;

                console.log("----- HELLLLOOOOOOO 3 ---- ")
                const comments = await github.paginate(
                    github.rest.issues.listComments, {
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: context.payload.pull_request.number,
                        per_page: 100,
                    }
                )

                const existingComment = comments.find(comment => comment.body.includes("### Config Diff Tool Output"));
                console.log("----- HELLLLOOOOOOO 4 ---- ")
                if (existingComment) {
                    console.log("A config diff comment already exists, deleting it...");
                    // Update the existing comment
                    github.rest.issues.deleteComment({
                        comment_id: existingComment.id,
                        owner: context.repo.owner,
                        repo: context.repo.repo
                    });
                }

                console.log("Creating a new config diff comment...");
                // Create a new comment
                github.rest.issues.createComment({
                    issue_number: context.payload.pull_request.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: commentBody
                });

                // Set the status as FAILED, if any configutation changes are detected
                console.log("Configuration changes detected: ", JSON.stringify(diffJson));
                core.setFailed("Configuration Changes Detected, Update release documents - if necessary");
            }
