name: Check if any ceph configuration has been changed
on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches:
      - main

# The following permissions are needed to write a comment to repo
permissions:
    issues: write
    contents: write
    pull-requests: write

jobs:
  pull_request:
    runs-on: ubuntu-latest
    steps:
      - name: checkout ceph.git
        uses: actions/checkout@v4
        with:
          path: ceph
          # sparse-checkout: src/script
          # sparse-checkout-cone-mode: false

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' 

      - name: Install python packages
        run: |
          pip3 install -r requirements.txt
        working-directory: ceph

      - name: execute config diff tool
        id: diff_tool
        run:   |
          rm diff_result.json
          python3 main.py diff-branch-remote-repo --ref-repo https://github.com/ceph/ceph.git --ref-branch main --remote-repo https://github.com/Naveenaidu/ceph --cmp-branch wip-naveen-telemetry-show-labeled-perf-counters >> diff_result.json
        working-directory: ceph
      
      - name: Post output as a comment
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const diffOutputPath = path.join('ceph', 'diff_result.json');
            const diffOutput = fs.readFileSync(diffOutputPath, 'utf8');
            const diffJson = JSON.parse(diffOutput);

            console.log("0");
            // Do not create comment if there are no configuration changes
            const isEmptyDiff = Object.keys(diffJson.added).length === 0 &&
                                Object.keys(diffJson.deleted).length === 0 &&
                                Object.keys(diffJson.modified).length === 0;

            console.log("1");
            console.log(context.repo.owner, context.repo.repo, context.payload.pull_request.number);
            const {data: comments} = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              per_page: 100,
            })
            console.log(comments);

            const comments2 = await github.paginate(
              github.rest.issues.listComments, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
              }
            )
            console.log(comments2);
