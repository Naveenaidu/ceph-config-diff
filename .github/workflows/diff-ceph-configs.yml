name: Check if any ceph configuration has been changed
on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches:
      - main

# The following permissions are needed to write a comment to repo
permissions:
    contents: write
    pull-requests: write

jobs:
  pull_request:
    runs-on: ubuntu-latest
    steps:
      - name: checkout ceph.git
        uses: actions/checkout@v4
        with:
          path: ceph
          # sparse-checkout: src/script
          # sparse-checkout-cone-mode: false

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' 

      - name: Install python packages
        run: |
          pip3 install -r requirements.txt
        working-directory: ceph

      - name: execute config diff tool
        id: diff_tool
        run:   python3 main.py diff-branch-remote-repo --ref-repo https://github.com/ceph/ceph.git --ref-branch main --remote-repo https://github.com/Naveenaidu/ceph --cmp-branch wip-naveen-telemetry-show-labeled-perf-counters >> diff_result.json
        working-directory: ceph
      
      - name: Post output as a comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const diffOutputPath = path.join('ceph', 'diff_result.json');
            const diffOutput = fs.readFileSync(diffOutputPath, 'utf8');
            const diffJson = JSON.parse(diffOutput);

            // Check if the structure matches {"added": {}, "deleted": {}, "modified": {}}
            // Do not create comment if there are no configuration changes
            const isEmptyDiff = Object.keys(diffJson.added).length === 0 &&
                                Object.keys(diffJson.deleted).length === 0 &&
                                Object.keys(diffJson.modified).length === 0;

            if (isEmptyDiff) {
              console.log("No changes detected. Skipping comment creation.");
            } else {
              const commentBody = `### Config Diff Tool Output\n\`\`\`\n${diffOutput}\n\`\`\`\n\nThe above configuration changes are found in the PR, please update the relevant release documentation if necessary.`;
              
              // Fetch all comments on the pull request
              const comments = await github.paginate(github.rest.issues.listComments, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: ${{ steps.pr.outputs.result }}
              });

              console.log(comments);

              // Search for an existing comment containing the config diff output string
              const existingComment = comments.find(comment =>
                comment.body.includes("### Config Diff Tool Output")
              );

              if (existingComment) {
                // Update the existing comment
                github.rest.issues.updateComment({
                  comment_id: existingComment,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: commentBody
                });
              } else {
                // Create a new comment
                github.rest.issues.createComment({
                  issue_number: context.payload.pull_request.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: commentBody
                });
              }
              core.setFailed("Configuration Changed Detected, Updated release docs if necessary");
            }
